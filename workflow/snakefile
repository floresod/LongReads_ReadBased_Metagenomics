#################################################
###### LONG READS READ-BASED METAGENOMICS #######
#################################################


################################
#### Loado python libraries ####
################################
import glob


##########################
#### Global Variables ####
##########################
SAMPLE,=glob_wildcards("../resources/Data/{sample}.fastq.gz")
# Note: There is no need to put the data in Fastq if you don't need, just adjust the code if you change it. 

########################
#### Global outputs ####
########################
rule all:
    input:
        expand("../resources/Outputs/fastqc_rawreads/{sample}_fastqc.html", sample=SAMPLE),
        expand("../results/kraken2_rawreads/{sample}.tsv", sample=SAMPLE),
        expand("../results/bracken_rawreads/{sample}.tsv", sample=SAMPLE),
        expand("../results/card_rawreads/{sample}.tsv", sample=SAMPLE), 
        expand("../results/mobileOG_rawreads/{sample}.tsv", sample=SAMPLE)

###################################
#### Quality Control Raw Reads ####
###################################
rule fastqc_rawreads:
    input:
        "../resources/Data/{sample}.fastq.gz"
    output:
        html="../resources/Outputs/fastqc_rawreads/{sample}_fastqc.html",
        zip="../resources/Outputs/fastqc_rawreads/{sample}_fastqc.zip"
    params:
        extra="--quiet"
    log:
        "../resources/Logs/fastqc_rawreads/{sample}.log"
    threads:
        10
    resources:
        mem_mb=4000
    wrapper:
        "v6.0.0/bio/fastqc"

#########################################
#### Taxonomic Classificationi Reads ####
#########################################
rule kraken2_rr:
    input:
        rawread="../resources/Data/{sample}.fastq.gz"
    output:
        report="../results/kraken2_rawreads/{sample}.tsv", 
        output="../resources/Outputs/kraken2_rawreads/{sample}.tsv"
    params:
        database="../resources/Databases/k2_standard_08gb_20240605/" #Make sure this database matches the one being used.     
    resources: 
        threads = 40
    log:
        "../resources/Logs/kraken2_rawreads/{sample}.log"
    conda: 
        "../envs/kraken2_env.yaml"
    shell:
        """
        kraken2 --db {params.database} \
                {input.rawread} \
                --report {output.report} \
                --output {output.output} \
                --threads {resources.threads} \
                --confidence 0.01 \
                --use-names > {log} 2>&1
        """

rule bracken_rr:
    input: 
        report="../results/kraken2_rawreads/{sample}.tsv"
    output:
        report="../results/bracken_rawreads/{sample}.tsv"
    params:
        database="../resources/Databases/k2_standard_08gb_20240605/", 
        length=100
    log: 
        "../resources/Logs/bracken/{sample}.log"
    conda:
        "../envs/bracken_env.yaml"
    shell:
        """
        bracken -d {params.database} \
                -i {input.report} \
                -o {output.report} \
                -r {params.length} > {log} 2>&1
        """

#############################
#### CARD Aligment reads ####
#############################
rule diamond_card_rr:
    input:
        reads="../resources/Data/{sample}.fastq.gz",
        database="../resources/Databases/card_v3.3.0/card_v3.3.0.dmnd" # Make sure this database is correct
    output:
        "../results/card_rawreads/{sample}.tsv"
    log:
        "../resources/Logs/card_rawreads/{sample}.log"
    conda:
        "../envs/diamond_env.yaml"
    shell:
        """
        diamond blastx -d {input.database}\
                        -q {input.reads} \
                        -o {output} \
                        --id 90\
                        --subject-cover 80 \
                        -k 1 \
                        -F 15 \
                        --range-culling > {log} 2>&1

        """

#################################
#### MobileOG Aligment reads ####
#################################
rule diamond_mobileOG_rr:
    input:
        reads="../resources/Data/{sample}.fastq.gz",
        database="../resources/Databases/mobileOG/mobileOG.dmnd"
    output:
        "../results/mobileOG_rawreads/{sample}.tsv"
    log:
        "../resources/Logs/mobileOG_rawreads/{sample}.log"
    conda:
        "../envs/diamond_env.yaml"
    shell:
        """
        diamond blastx -d {input.database}\
                        -q {input.reads} \
                        -o {output} \
                        --id 90 \
                        --subject-cover 80 \
                        -k 1 \
                        -F 15 \
                        --range-culling > {log} 2>&1
        """



